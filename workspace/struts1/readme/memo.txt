
============ コネクション・プーリングとは ============

Connectionの取得という処理は、時間がかかる「重い」処理です。

そこで、「コネクション・プーリング」という手法が考案されました。
まず、複数のConnectionをあらかじめ作成しておき、ためておきます。
データベースを利用するときだけConnectionをアプリケーションに貸し出し、
アプリケーションでConnectionがcloseされたら元に戻します。この手法によって、
Coonectionは新たに作成されることはなく、アプリケーションで使いまわされます。
結果として、データベースに早くアクセスできます。

コネクション・プーリングを行うために、Jakarta Projectから「DBCP」というライブラリが提供されています。
直接DBCPのクラスを操作して、コネクション・プーリングの機能を使うことができます。
しかし、TomcatにはDBCPが既に組み込まれており、server.xmlとweb.xmlを変更するだけで
コネクション・プーリングを利用できます。

ここでは、Tomcatのserver.xmlとweb.xmlを変更する方法について解説します。



============ Resource パラメータ ============

factoryという要素では、DataSourceを生成するためのクラスを指定します。
ここではDBCPを使うので、org.apache.commons.dbcp.BasicDataSourceFactoryを指定しています。

maxActiveという要素では、同時に利用できるConnectionの数を指定します。
この数を超えてConnectionを利用しようとすると、別のアプリケーションがConnectionを使い終わるまで待つことになります。

maxWaitという要素では、Connectionの利用を待つ時間を指定します。
単位はミリ秒です。ここでは10秒と指定されています。

maxIdleという要素では、Connectionの利用がない状態のときに、いくつのConnectionをためておくかどうか設定します。
